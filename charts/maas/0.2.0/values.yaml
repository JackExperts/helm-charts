## Helm Chart - MaaS - Default values
## Jack Experts

timescaledb-single:
  enabled: true
  clusterName: db-zabbix
  replicaCount: 1
  image:
  repository: timescale/timescaledb-ha
  tag: pg14.2-ts2.6.1-p2
  pullPolicy: Always
  loadBalancer:
    enabled: false
  backup:
    enabled: false
  secrets:
    credentials:
      PATRONI_SUPERUSER_PASSWORD: "db-zabbix"
      PATRONI_REPLICATION_PASSWORD: "db-zabbix"
      PATRONI_admin_PASSWORD: "db-zabbix"
  persistentVolumes:
    data:
      enabled: true
      size: 5Gi
    wal:
      enabled: true
      size: 1Gi
  resources:
    limits:
      cpu: 1
      memory: 2048Mi
    requests:
      cpu: 500m
      memory: 1024Mi
  prometheus:
    enabled: true
    image:
      repository: wrouesnel/postgres_exporter
      tag: v0.7.0
      pullPolicy: IfNotPresent

letsencrypt:
  enabled: true
  name: letsencrypt-maas
  mail: ""

database:
  create: true
  jobName: dbzabbixcreate
  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

zabbix:
  enabled: true
  zabbix_image_tag: ubuntu-6.2.5
  postgresql:
    enabled: false
  db_access:
    unified_secret_name: zabbixdb-pguser-zabbix
    db_server_host: "db-zabbix"
    db_server_port: "5432"
    postgres_user: "postgres"
    postgres_password: "zabbix"
    postgres_db: "zabbix"
  zabbixserver:
    replicaCount: 1
    image:
      repository: zabbix/zabbix-server-pgsql
    service:
      type: LoadBalancer
      ## Annotations para uso de NLB na AWS
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
        service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb"

  zabbixweb:
    enabled: true
    maas: "MaaS - Demo"
    image:
      repository: zabbix/zabbix-web-nginx-pgsql
  
  zabbixagent:
    enabled: true
    ZBX_ACTIVE_ALLOW: false
  
  ingress:
    enabled: true
    annotations:
      cert-manager.io/issuer: "letsencrypt-maas"
      kubernetes.io/ingress.class: "nginx"
    domain: chart-example.local
    paths:
      - path: /
        pathType: ImplementationSpecific
    tls:
      enabled: true
      secretName: zabbix-ssl
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
    pathType: Prefix

grafana:
  enabled: false
  persistence:
    enabled: true
    size: 2Gi
  adminUser: admin
  adminPassword: ""
  plugins:
    - alexanderzobnin-zabbix-app
  env:
    GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: alexanderzobnin-zabbix-datasource
    GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/dash/"
    GF_SERVER_SERVE_FROM_SUB_PATH: true
  dashboards:
    default:
      system-status:
        file: dashboards/system-status.json
      cpu-utilization:
        file: dashboards/cpu-utilization.json
      dashboard-servers:
        file: dashboards/dashboard-servers.json
      memory-utilization:
        file: dashboards/memory-utilization.json
      disk-utilization:
        file: dashboards/disk-utilization.json
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: "Zabbix"
        type: "alexanderzobnin-zabbix-datasource"
        url: "http://zabbix-web/api_jsonrpc.php"
        access: "proxy"
        orgId: 1
        isDefault: true
        jsonData:
          username: "grafana"        
        secureJsonData:
          password: "grafana"
        editable: true
  ingress:
    enabled: true
    domain: chart-example.local
    tls:
      enabled: true
      secretName: zabbix-ssl
    path: /dash
    annotations:
      cert-manager.io/issuer: "letsencrypt-maas"
      kubernetes.io/ingress.class: "nginx"

rundeck:
  enabled: false
  rundeck:
    adminUser: "admin:admin,user,admin,architect,deploy,build"
    env:
      RUNDECK_GRAILS_URL: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local"
      RUNDECK_SERVER_FORWARDED: "true"
      RUNDECK_LOGGING_STRATEGY: "CONSOLE"
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/issuer: "letsencrypt-maas"
      nginx.ingress.kubernetes.io/proxy-body-size: "200m"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "100"
      nginx.ingress.kubernetes.io/proxy-buffer-size: "200m"
      nginx.ingress.kubernetes.io/client-body-buffer-size: "200m"
    paths: ['/']
    domain: chart-example.local
    tls:
      enabled: true
      secretName: zabbix-ssl
